1. restore history of replit.nix

npm install sass  --- AND ---  npm install -g shadow-cljs
2. Install Clojure
3. Yarn install
4. 
5. cd resources/public/css
6. npx sass --no-source-map -s compressed 
7. cd StreamTide/resources/scss
8. resources/public/css/main.scss:resources/public/css/main.css
resources/scss/vars.scss
npx sass --no-source-map -s compressed main.scss:main.css
9. npx shadow-cljs compile shadow-cljs.edn
10.

#file that's used to manage project dependencies in node.js projects.

To install all the dependencies listed under "dependencies" and "devDependencies" you will need to use a package manager like npm or yarn. In your scripts section, it mentions the use of yarn.

Here's how you can do it:

First, you need to have Node.js and yarn installed on your system. You can download Node.js from the official Node.js website and install yarn via npm by running: npm install -g yarn

Secondly, navigate to your project directory in your terminal.

Once you're in your project directory, run yarn install in your terminal.

Running yarn install will automatically read the package.json file, and it will install all the dependencies listed under both "dependencies" and "devDependencies" sections.

If you find the following error "The engine "node" is incompatible with this module. Expected version "^18.0.0". Got "your_node_version" because of the node engine version in package.json, you can bypass it using yarn install --ignore-engines.

Please note that the current environment in Replit must be a Node.js environment for this process to work properly.


---

npx shadow-cljs compile app



use Q environmentcompile clojure and convert to js
then serve js file
clojure environment.
npx sass --no-source-map -s compressed main.scss:../public/css/main.css

bbtasks - View all commands
need to type export anytime you close terminal

To Run:
export STREAMTIDE_ENV=qa
rm -rf .shadow-cljs
bb watch-ui
bb watch-css


---

  (let []
    (fn []
      [app-layout
       [:main.pageSite
        {:id "about"}
        [:div
         [:div.headerGrants
          [:div.container
           [:h1.titlePage "About"]]]
         [:div.container
          "TODO"
          ]]]])))

(defmethod page :route/home []
  (let []
    (fn []
      [app-layout
       [:main.pageSite
        {:id "about"}
        [:div
         [:div.headerGrants
          [:div.container
          [:div.text
           [:p "Stream Tide is an open-source patronage tool that operates on Web3 and microgrants. By matching creator contributions, it amplifies that support and makes donations go further during a grant round. Our goal is to support creators, promote open-source & the creative commons, so we can help shape the decentralized future of work. ðŸš€"]]
          [:div.video
           [:video
            {:controls true}
            [:source {:src "/img/layout" :type "video/mp4"}]
            "Your browser does not support the video tag."]]]
         [:div.hero
          [:div.imgHero
           [:video.item-day
            {:autoPlay true :muted true :loop true}
            [:source {:src "/img/layout/stream_day.mp4" :type "video/mp4"}]
            "Your browser does not support the video tag."]
           [:video.item-night
            {:autoPlay true :muted true :loop true}
            [:source {:src "/img/layout/stream_night.mp4" :type "video/mp4"}]
            "Your browser does not support the video tag."]]]]]])))


            ; TODO currently admins can create many announcements but users would only see the first one.
; Maybe we would allow enabling or disabling the announcement without having to delete them, or even give some validity period
